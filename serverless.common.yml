custom:
  # Our stage is based on what is passed in when running serverless
  # commands. Or fallsback to what we have set in the provider section.
  stage: ${opt:stage, self:provider.stage}
  resources_stages:
    prod: prod
    dev: dev
  resources_stage: ${self:custom.resources_stages.${self:custom.stage}, self:custom.resources_stages.prod}

  cron_enabled:
    dev: 0
    prod: 1

  # Set the table name here so we can use it while testing locally
  globalDecksTable: ${self:custom.stage}-global-decks
  globalCardsTable: ${self:custom.stage}-global-cards
  dailyPricesBucket: ${self:custom.stage}-global-prices
  #cardSearchDomainEndpoint:
  #  'Fn::ImportValue': CardSearchDomainEndpoint
  pythonRequirements:
    layer:
      name: ${self:service}

lambdaPolicyXRay:
  Effect: Allow
  Action:
    - xray:PutTraceSegments
    - xray:PutTelemetryRecords
  Resource: "*"
